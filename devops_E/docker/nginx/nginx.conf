user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 20M;

    # Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss;

    # Upstream definitions for all services
    upstream backend {
        server backend_a:3000;
    }

    upstream frontend {
        server frontend_b:5173;
    }

    upstream auth {
        server auth_c:3001;
    }

    upstream game {
        server game_d:3002;
    }

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=game_limit:10m rate=20r/s;

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Frontend (React/Vue)
        location / {
            proxy_pass http://frontend\;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # WebSocket support for HMR in development
            proxy_read_timeout 86400;
        }

        # Backend API (NestJS - Module 3: User Management)
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://backend\;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Auth Service (Module 4: OAuth & Module 5: 2FA)
        location /auth/ {
            limit_req zone=auth_limit burst=5 nodelay;
            
            rewrite ^/auth/(.*) /$1 break;
            proxy_pass http://auth\;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # OAuth callbacks
        location ~ ^/auth/(42|google|github)/callback {
            proxy_pass http://auth\;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Game WebSocket (Module 8: Server-Side Pong)
        location /game {
            limit_req zone=game_limit burst=30 nodelay;
            
            proxy_pass http://game\;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # WebSocket specific settings
            proxy_read_timeout 3600;
            proxy_send_timeout 3600;
            proxy_buffering off;
        }

        # Tournament API (Module 7: Tournament Management)
        location /api/tournaments {
            limit_req zone=api_limit burst=10 nodelay;
            
            proxy_pass http://backend/tournaments\;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Health checks for all services
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "nginx healthy\n";
        }

        location /api/health {
            access_log off;
            proxy_pass http://backend/health\;
        }

        location /auth/health {
            access_log off;
            proxy_pass http://auth/health\;
        }

        location /game/health {
            access_log off;
            proxy_pass http://game/health\;
        }

        # Monitoring endpoints (restricted)
        location /metrics {
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
            proxy_pass http://backend/metrics\;
        }

        # Static files caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2)$ {
            proxy_pass http://frontend\;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
    }
}
